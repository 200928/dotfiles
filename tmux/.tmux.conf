# # 设置 tmux 位置
# set-option -g status-position bottom
#
# # 改善颜色
# # set -g default-terminal "tmux-256color"
# # # set -g default-terminal "${TERM}"
# # set -ga terminal-overrides ",*256col*:Tc"
#
# set -g default-terminal screen-256color
# set-option -ga terminal-overrides ",*256col*:Tc" # 这句是关键
#
# # act like vim
# setw -g mode-keys vi
#
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h  if-shell  "$is_vim"  "send-keys C-h"  "select-pane -L"
# bind-key -n C-j   if-shell  "$is_vim"  "send-keys C-j"   "select-pane -D"
# bind-key -n C-k  if-shell  "$is_vim"  "send-keys C-k"  "select-pane -U"
# bind-key -n C-l   if-shell  "$is_vim"  "send-keys C-l"   "select-pane -R"
#
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# # 下面两行与 panne selction 有冲突
# # bind -r C-h select-window -t :-
# # bind -r C-l select-window -t :+
#
# bind-key m copy-mode    # 进入复制模式
# bind v paste-buffer     # 粘贴内容
# bind -T copy-mode-vi "v" send -X begin-selection
# bind -T copy-mode-vi "V" send -X rectangle-toggle
# # bind -T copy-mode-vi "y" send -X copy-selection-and-cancel
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
#
# # 表现得像 GNU 屏幕
# # unbind C-b
# # set -g prefix C-a
# # bind a send-prefix
# # bind C-a send-prefix
# # bind b send-prefix
# # bind C-b send-prefix
#
# # 在同一目录中创建新的窗口/窗格
# bind c new-window -c "#{pane_current_path}"
# bind-key | split-window -h
# bind-key - split-window -v
#
# # 退出窗口
# unbind x
# bind-key X kill-pane
# bind-key Q kill-window
# bind K confirm kill-window
#
# # 启用和禁用面板的键盘输入
# bind < select-pane -d \; display-message "input disabled"
# bind > select-pane -e \; display-message "input enabled"
#
# # 根据查看该窗口的客户大小调整窗口
# setw -g aggressive-resize on
#
# # 启用鼠标控制
# set -g mouse on
#
# # 从 1 开始窗口编号以匹配键盘顺序和 tmux 顺序order
# set -g base-index 1
#
# # 从 1 开始窗格编号以匹配键盘顺序和 tmux 顺序
# setw -g pane-base-index 1
#
# # 轻松调整窗格大小
# bind -r J resize-pane -D 5
# bind -r K resize-pane -U 5
# bind -r H resize-pane -L 5
# bind -r L resize-pane -R 5
#
# bind-key -n C-Left  "resize-pane -L 5"
# bind-key -n C-Right "resize-pane -R 5"
# bind-key -n C-Up    "resize-pane -U 5"
# bind-key -n C-Down  "resize-pane -D 5"
#
# # move window
# #bind -r C-h previous-window # select previous window
# #bind -r C-l next-window     # select next window
# bind Tab last-window        # move to last active window
#
# # 重新启用当前窗口的自动重命名
# bind N setw automatic-rename on \; display-message "automatic rename enabled"
#
# # 关闭任何一个窗口后按顺序重新编号窗口
# set -g renumber-windows on
#
# # 监视窗口的活动
# setw -g monitor-activity on
#
# # don't wait for escape sequences
# set -sg escape-time 0
#
# # display pane numbers for longer
# set -g display-panes-time 2000
#
# # 注意：下面的设置被 github_* 主题覆盖
# set -g status-left-length 20
# set -g status-left '#{?pane_input_off,#[fg=colour160],#[fg=colour136]}[#[fg=colour136]#S:#I.#P#{?pane_input_off,#[fg=colour160],#[fg=colour136]}] '
# set -g status-right '#[fg=colour166]#([ "$(tmux show-option -g prefix)" != "prefix C-a" ] && echo "($(tmux show-option -g prefix | cut -c 8-)) ")#[fg=colour33]%d %b %Y #{?client_prefix,#[fg=colour160],#[fg=colour61]}- #[fg=colour64]%I:%M %p #{?client_prefix,#[fg=colour160],#[fg=colour61]}- #[fg=colour37]#([ -f $HOME/.name ] && cat $HOME/.name || hostname)'
#
#
# # 增加回滚行
# set -g history-limit 65536
#
# # 清除历史记录的键绑定
# bind C-k clear-history \; display-message "history cleared"
#
# # C-b ! 将当前窗格分成单独的窗口
# # 将当前会话中的窗格/窗口加入当前窗口
# bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"
#
# # reload the .tmux.conf file with Ctrl-r
# bind C-r source-file ~/.tmux.conf \; display-message "configuration reloaded"
#
# # toggle passthrough of prefix
# bind P if-shell "[ \"$(tmux show-options -g prefix)\" = \"prefix C-a\" ]" '\
#     set -g prefix C-b; display-message "passthrough enabled"; refresh-client -S; \
#     ' '\
#     set -g prefix C-a; display-message "passthrough disabled"; refresh-client -S; \
#     '
#
# #### color (Solarized 256)
# # set -g mode-style "fg=default,bg=default,reverse"
# # set -g status-style bg=colour235,fg=colour136
# # setw -g window-status-style fg=colour244
# # setw -g window-status-current-style fg=colour166
# # setw -g window-status-activity-style fg=colour61
# # setw -g window-status-bell-style fg=colour61
# # set -g pane-border-style fg=colour235
# # set -g pane-active-border-style fg=colour240
# # set -g message-style bg=colour235,fg=colour166
#
# # pane number display
# set -g display-panes-active-colour colour166 #blue
# set -g display-panes-colour colour33 #orange
#
# # clock
# setw -g clock-mode-colour colour64 #green
#
# # Update config
# bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"
#
# # Allow local customization in ~/.tmux_local.conf
# if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'
#
# # Undercurl
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
#
# # plugins
# source "~/.config/tmux/plugins.conf"
# # theme
# source "~/.config/tmux/themes/github_dark.conf"
#
#
#
